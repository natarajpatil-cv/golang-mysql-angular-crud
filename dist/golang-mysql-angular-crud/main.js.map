{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee-create/employee-create.component.css","webpack:///./src/app/employee-create/employee-create.component.html","webpack:///./src/app/employee-create/employee-create.component.ts","webpack:///./src/app/employee-edit/employee-edit.component.css","webpack:///./src/app/employee-edit/employee-edit.component.html","webpack:///./src/app/employee-edit/employee-edit.component.ts","webpack:///./src/app/employees-list/employees-list.component.css","webpack:///./src/app/employees-list/employees-list.component.html","webpack:///./src/app/employees-list/employees-list.component.ts","webpack:///./src/app/shared/rest-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeCreateComponent } from './employee-create/employee-create.component';\nimport { EmployeeEditComponent } from './employee-edit/employee-edit.component';\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'create-employee' },\n  { path: 'create-employee', component: EmployeeCreateComponent },\n  { path: 'employees-list', component: EmployeesListComponent },\n  { path: 'employee-edit/:id', component: EmployeeEditComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\\\">\\n  <h5 class=\\\"my-0 mr-md-auto font-weight-normal\\\">Employee Management</h5>\\n  <nav class=\\\"my-2 my-md-0 mr-md-3\\\">\\n    <a class=\\\"btn btn-outline-primary\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/create-employee\\\">Create Employee</a>\\n  </nav>\\n  <a class=\\\"btn btn-outline-primary\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/employees-list\\\">Employees List</a>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-httpclient-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n// HttpClient module for RESTful API\nimport { HttpClientModule } from '@angular/common/http';\n\n// Routing module for router service\nimport { AppRoutingModule } from './app-routing.module';\n\n// Forms module\nimport { FormsModule } from '@angular/forms';\n\n// Components\nimport { EmployeeCreateComponent } from './employee-create/employee-create.component';\nimport { EmployeeEditComponent } from './employee-edit/employee-edit.component';\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeCreateComponent,\n    EmployeeEditComponent,\n    EmployeesListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlLWNyZWF0ZS9lbXBsb3llZS1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container custom-container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h3 class=\\\"mb-3 text-center\\\">Create Employee</h3>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"employeeDetails.name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"employeeDetails.email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"employeeDetails.phone\\\" class=\\\"form-control\\\" placeholder=\\\"Phone\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"addEmployee()\\\">Create Employee</button>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-employee-create',\n  templateUrl: './employee-create.component.html',\n  styleUrls: ['./employee-create.component.css']\n})\nexport class EmployeeCreateComponent implements OnInit {\n\n  @Input() employeeDetails = { name: '', email: '', phone: 0 }\n\n  constructor(\n    public restApi: RestApiService, \n    public router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  addEmployee(dataEmployee) {\n    this.restApi.createEmployee(this.employeeDetails).subscribe((data: {}) => {\n      this.router.navigate(['/employees-list'])\n    })\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlLWVkaXQvZW1wbG95ZWUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container custom-container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    \\n    <h3 class=\\\"mb-3 text-center\\\">Update Employee</h3>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"employeeData.name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"employeeData.email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"employeeData.phone\\\" class=\\\"form-control\\\" placeholder=\\\"Phone\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"updateEmployee()\\\">Update Employee</button>\\n    </div>\\n    \\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css']\n})\n\nexport class EmployeeEditComponent implements OnInit {\n  id = this.actRoute.snapshot.params['id'];\n  employeeData: any = {};\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() { \n    this.restApi.getEmployee(this.id).subscribe((data: {}) => {\n      this.employeeData = data;\n    })\n  }\n\n  // Update employee data\n  updateEmployee() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.restApi.updateEmployee(this.id, this.employeeData).subscribe(data => {\n        this.router.navigate(['/employees-list'])\n      })\n    }\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy1saXN0L2VtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container custom-container-2\\\">\\n\\n  <!-- Show it when there is no employee -->\\n  <div class=\\\"no-data text-center\\\" *ngIf=\\\"Employee.length == 0\\\">\\n    <p>There is no employee added yet!</p>\\n    <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/create-employee\\\">Add Empoyee</button>\\n  </div>\\n\\n  <!-- Employees list table, it hides when there is no employee -->\\n  <div *ngIf=\\\"Employee.length !== 0\\\">\\n    <h3 class=\\\"mb-3 text-center\\\">Employees List</h3>\\n\\n    <div class=\\\"col-md-12\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">User Id</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Phone</th>\\n            <th scope=\\\"col\\\">Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let employee of Employee\\\">\\n            <td>{{employee.id}}</td>\\n            <td>{{employee.name}}</td>\\n            <td>{{employee.email}}</td>\\n            <td>{{employee.phone}}</td>\\n            <td>\\n              <span class=\\\"edit\\\" routerLink=\\\"/employee-edit/{{employee.id}}\\\">Edit</span>\\n              <span class=\\\"delete\\\" (click)=\\\"deleteEmployee(employee.id)\\\">Delete</span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-employees-list',\n  templateUrl: './employees-list.component.html',\n  styleUrls: ['./employees-list.component.css']\n})\nexport class EmployeesListComponent implements OnInit {\n\n  Employee: any = [];\n\n  constructor(\n    public restApi: RestApiService\n  ) { }\n\n  ngOnInit() {\n    this.loadEmployees()\n  }\n\n  // Get employees list\n  loadEmployees() {\n    return this.restApi.getEmployees().subscribe((data: {}) => {\n      this.Employee = data;\n    })\n  }\n\n  // Delete employee\n  deleteEmployee(id) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.restApi.deleteEmployee(id).subscribe(data => {\n        this.loadEmployees()\n      })\n    }\n  }  \n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Employee } from '../shared/employee';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestApiService {\n  \n  // Define API\n  apiURL = 'http://localhost:8000';\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }  \n\n  // HttpClient API get() method => Fetch employees list\n  getEmployees(): Observable<Employee> {\n    return this.http.get<Employee>(this.apiURL + '/employees')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API get() method => Fetch employee\n  getEmployee(id): Observable<Employee> {\n    return this.http.get<Employee>(this.apiURL + '/employees/' + id)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }  \n\n  // HttpClient API post() method => Create employee\n  createEmployee(employee): Observable<Employee> {\n    return this.http.post<Employee>(this.apiURL + '/employees', JSON.stringify(employee), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }  \n\n  // HttpClient API put() method => Update employee\n  updateEmployee(id, employee): Observable<Employee> {\n    return this.http.put<Employee>(this.apiURL + '/employees/' + id, JSON.stringify(employee), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API delete() method => Delete employee\n  deleteEmployee(id){\n    return this.http.delete<Employee>(this.apiURL + '/employees/' + id, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // Error handling \n  handleError(error) {\n     let errorMessage = '';\n     if(error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n     return throwError(errorMessage);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}